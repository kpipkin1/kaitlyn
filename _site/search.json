[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kaitlyn_Pipkin",
    "section": "",
    "text": "title: “Kaitlyn Pipkin” toc: false about: template: trestles links: - text: GitHub href: link - text: Email href: link"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html#bio",
    "href": "index.html#bio",
    "title": "Kaitlyn_Pipkin",
    "section": "Bio",
    "text": "Bio"
  },
  {
    "objectID": "index.html#research-goals",
    "href": "index.html#research-goals",
    "title": "Kaitlyn_Pipkin",
    "section": "Research Goals",
    "text": "Research Goals"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Kaitlyn_Pipkin",
    "section": "Experience",
    "text": "Experience"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Title\n\n\nAuthor\n\n\n\n\n\n\nAbout\n\n\n \n\n\n\n\nDNA Damage in VSMCs\n\n\nKaitlyn Pipkin\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Projects/Accessing DNA Damage.html",
    "href": "Projects/Accessing DNA Damage.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "projects/Accessing DNA Damage.html",
    "href": "projects/Accessing DNA Damage.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "projects/DNA Damage in VSMCs/DNA_Damage_VSMCs.html",
    "href": "projects/DNA Damage in VSMCs/DNA_Damage_VSMCs.html",
    "title": "DNA Damage in VSMCs",
    "section": "",
    "text": "Set the working directory\n\n#setwd(\"C:/Users/kpipkin1/Documents/GitHub/kaitlyn/projects/DNA Damage in VSMCs\")\n\n\n\n#Load the necessary libraries\n\nlibrary(tidyverse) \n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readr) \nlibrary(ggplot2) \nlibrary(stringr) \nlibrary(ggpubr)\n\n\n\n#Read in all of the CSV files\n\nfile_paths &lt;- list.files(pattern = \"\\\\.csv$\", full.names = TRUE)\n\n\n\n#Read all of the data into 1 tibble\n\nall_data&lt;-file_paths %&gt;%\n  set_names() %&gt;%\n  map_dfr(read_csv, .id = \"filename\")\n\n\n\n#Add Columns and define base_name to help join\n\nall_data &lt;- all_data %&gt;%\n  mutate(\n    base_name = filename %&gt;%\n      basename() %&gt;%\n      str_remove(\" \\\\(blue\\\\)| \\\\(green\\\\)\") %&gt;%\n      str_remove(\"-summary\\\\.csv$\"),\n    day = str_extract(filename, \"\\\\d+d\"),\n    dosage = case_when(\n      str_detect(filename, \"0\\\\.1uM\") ~ \"0.1uM\",\n      str_detect(filename, \"0\\\\.2uM\") ~ \"0.2uM\",\n      str_detect(filename, \"0\\\\.4uM\") ~ \"0.4uM\",\n      str_detect(filename, \"no doxo\") ~ \"0uM\",\n      TRUE ~ NA_character_\n    ),\n    channel = case_when(\n      str_detect(filename, \"blue\") ~ \"blue\",\n      str_detect(filename, \"green\") ~ \"green\",\n      TRUE ~ NA_character_\n    )\n  )\n\n\n\n#Separate Blue and Green columns and join based on day and dosage\n\nblue &lt;- all_data %&gt;%\n  filter(channel == \"blue\") %&gt;%\n  select(base_name, day, dosage, Count, `Total Area`, `Average Size`, `%Area`, Mean) %&gt;%\n  rename_with(~ paste0(., \"_blue\"), -c(base_name, day, dosage))\n\ngreen &lt;- all_data %&gt;%\n  filter(channel == \"green\") %&gt;%\n  select(base_name, Count, `Total Area`, `Average Size`, `%Area`, Mean) %&gt;%\n  rename_with(~ paste0(., \"_green\"), -base_name)\n\n\n\n#Join green and blue channel images together\n\ncombined &lt;- inner_join(blue, green, by = \"base_name\")\n\n\n\n#Calculate the percent of green area (yH2AX) normalized to the blue area (DAPI)\n\ncombined &lt;- combined %&gt;%\n  mutate(percent_gammaH2AX = (`%Area_green` / `%Area_blue`) * 100)\n\n\n\n#Clean data and get rid of points that do not match, and any NA or missing values\n\ncombined &lt;- combined %&gt;%\n  filter(!is.na(dosage), !is.na(percent_gammaH2AX), !is.na(day)) %&gt;%\n  mutate(\n    dosage = factor(dosage, levels = c(\"0uM\", \"0.1uM\", \"0.2uM\", \"0.4uM\")),\n    day = factor(day, levels = c(\"3d\", \"4d\", \"7d\", \"11d\"))\n  ) %&gt;%\n  droplevels()\n\n\n\n#Pick colors for the plot\n\nbox_fill &lt;- c(\n  \"3d\" = \"#66c2a5\",  # green\n  \"4d\" = \"#fc8d62\",  # orange\n  \"7d\" = \"#8da0cb\",  # blue\n  \"11d\" = \"#e78ac3\"  # pink\n)\n\n\n\n\n#Generate a combined plot with each timepoint separated by color, dosage on X axis and percent of coverage (yH2AX/DAPI) on the y axis\n\nggplot(combined, aes(x = dosage, y = percent_gammaH2AX, fill = day)) +\n  geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.4, width = 0.4, outlier.shape = NA) +\n  geom_jitter(aes(color = day), \n              position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), \n              size = 2, alpha = 0.8) +\n  scale_fill_manual(values = box_fill) +\n  scale_color_manual(values = box_fill) +\n  labs(\n    title = \"Assessing Dose- and Time-Dependent DNA Damage in VSMCs Following Doxorubicin Treatment\",\n    x = \"Doxorubicin Dose\",\n    y = \"% γH2AX / % DAPI\",\n    fill = \"Day\",\n    color = \"Day\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nPlot the individual days separately to access DNA damage by dosage more clearly\n\nplot_day &lt;- function(day_label) {\n  combined %&gt;%\n    filter(day == day_label) %&gt;%\n    ggplot(aes(x = dosage, y = percent_gammaH2AX)) +\n    geom_boxplot(fill = box_fill[day_label], alpha = 0.4, width = 0.3, outlier.shape = NA) +\n    geom_jitter(color = box_fill[day_label], width = 0.15, size = 2, alpha = 0.8) +\n    labs(\n      title = paste(\"Dose-Dependent DNA Damage in VSMCs on\", day_label),\n      x = \"Doxorubicin Dose\",\n      y = \"% γH2AX / % DAPI\"\n    ) +\n    theme_minimal()\n}\n\n# Usage:\nplot_day(\"3d\")\n\n\n\n\n\n\n\nplot_day(\"4d\")\n\n\n\n\n\n\n\nplot_day(\"7d\")\n\n\n\n\n\n\n\nplot_day(\"11d\")"
  }
]
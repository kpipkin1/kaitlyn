[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kaitlyn_Pipkin",
    "section": "",
    "text": "title: “Kaitlyn Pipkin” toc: false about: template: trestles links: - text: GitHub href: link - text: Email href: link"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html#bio",
    "href": "index.html#bio",
    "title": "Kaitlyn_Pipkin",
    "section": "Bio",
    "text": "Bio"
  },
  {
    "objectID": "index.html#research-goals",
    "href": "index.html#research-goals",
    "title": "Kaitlyn_Pipkin",
    "section": "Research Goals",
    "text": "Research Goals"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Kaitlyn_Pipkin",
    "section": "Experience",
    "text": "Experience"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Title\n\n\nAuthor\n\n\n\n\n\n\nDNA Damage in VSMCs\n\n\nKaitlyn Pipkin\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Projects/Accessing DNA Damage.html",
    "href": "Projects/Accessing DNA Damage.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "projects/Accessing DNA Damage.html",
    "href": "projects/Accessing DNA Damage.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "projects/DNA Damage in VSMCs/DNA_Damage_VSMCs.html",
    "href": "projects/DNA Damage in VSMCs/DNA_Damage_VSMCs.html",
    "title": "DNA Damage in VSMCs",
    "section": "",
    "text": "Project Overview\nThe goal of this project is to assess the extent of DNA damage in vascular smooth muscle cells (VSMCs) following treatment with Doxorubicin. I will be using a data set that consists of 96 CSV files generated from ImageJ analysis. Each sample includes two channels: the DAPI (blue) channel, which stains cell nuclei, and the γH2AX (green) channel, an established marker of DNA damage. VSMCs were treated with Doxorubicin at four time points: days 3, 4, 7, and 11. VSMCs were also treated at different concentrations of Doxorubicin: 0 μM, 0.1 μM, 0.2 μM, and 0.4 μM. This study aims to determine the percentage of γH2AX signal normalized to nuclear area across different conditions to determine if there is any impact from dosage and duration on DNA damage.\n\n\nSet the working directory\n\n#setwd(\"C:/Users/kpipkin1/Documents/GitHub/kaitlyn/projects/DNA Damage in VSMCs\")\n\n\n\nLoad the necessary libraries\n\nlibrary(tidyverse) \nlibrary(gt)\n\n\n\nRead in all of the CSV Files\n\nfile_paths &lt;- list.files(pattern = \"\\\\.csv$\", full.names = TRUE)\n\nIn this code chunk, I am using Base R. My variable here is “file_paths”. This variable will contain a list of file names that I have stored in my current working directory. The “list.files” function searches for files in that current working directory. The “pattern=(2 back slashes).csv$” argument will allow for only the files that end in “.csv” to be included in my “file_paths” variable. This is because in regular expressions, a period means “any character” so we have to escape that with 2 backslashes to match to a period. Because the filename ends after csv, I use a dollar sign at the end of the pattern to indicate that csv is the end of the string so it will only pull files that end in .csv, not just a file that contains .csv. I use the “full.names=TRUE” peice to return the entire file path instead of just the file name itself. # Read all of the .csv Files into one Dataset\n\nall_data&lt;-file_paths %&gt;%\n  set_names() %&gt;%\n  map_dfr(read_csv, .id = \"filename\")\n\nMy new variable here is “all_data”, which is where all of my file_paths are combined into one big data set. The file_paths%&gt;% will start with the list of the .csv file paths and allow them to be piped in the next function, “set_names()”. This allows R to know which row came from which file. The “map_dfr(read_csv,.id=filename)” Makes R read each csv file in the list and combine all of the files together into one data frame. In addition, R then adds a new column to the big data frame called “filename”.The map_dfr function is from a package in tidyverse called purrr. dfr means data frame row bind.\n\n\nUse File Names to Pull Metadata\n\nall_data &lt;- all_data %&gt;%\n  mutate(\n    base_name = filename %&gt;%\n      basename() %&gt;%\n      str_remove(\" \\\\(blue\\\\)| \\\\(green\\\\)\") %&gt;%\n      str_remove(\"-summary\\\\.csv$\"),\n    day = str_extract(filename, \"\\\\d+d\"),\n    dosage = case_when(\n      str_detect(filename, \"0\\\\.1uM\") ~ \"0.1uM\",\n      str_detect(filename, \"0\\\\.2uM\") ~ \"0.2uM\",\n      str_detect(filename, \"0\\\\.4uM\") ~ \"0.4uM\",\n      str_detect(filename, \"no doxo\") ~ \"0uM\",\n      TRUE ~ NA_character_\n    ),\n    channel = case_when(\n      str_detect(filename, \"blue\") ~ \"blue\",\n      str_detect(filename, \"green\") ~ \"green\",\n      TRUE ~ NA_character_\n    )\n  )\n\nThe “mutate()” function adds new columns to the big dataset by extracting the information from the filename column. The basename column uses only the dosage, sample ID, and timepoint to help join files together later. The timepoint is extracted from the filename and matches to patterns listed in the file name which in this case is “11d” for example. By using “case_when()” you can add a column for dosage by finding patterns like “0.1uM” or “no doxo” and defining what they mean. The channel column is based on the fluorescence color also pulled from the filename. Both the mutate and case_when functions are from packages in tidyverse called dplyr and stringr.\n\n\nSeparate the Dataset into Blue and Green Channels\n\nblue &lt;- all_data %&gt;%\n  filter(channel == \"blue\") %&gt;%\n  select(base_name, day, dosage, Count, `Total Area`, `Average Size`, `%Area`, Mean) %&gt;%\n  rename_with(~ paste0(., \"_blue\"), -c(base_name, day, dosage))\n\ngreen &lt;- all_data %&gt;%\n  filter(channel == \"green\") %&gt;%\n  select(base_name, Count, `Total Area`, `Average Size`, `%Area`, Mean) %&gt;%\n  rename_with(~ paste0(., \"_green\"), -base_name)\n\nThis code split my dataset into two tables: one with images from the blue channel and one with images from the green channel. Then I rename the measurment columns with the appropriate channel name to help join them later. The filter and rename_with functions are both from packages in tidyverse called dplyr.\n\n\nJoin Green and Blue Channel Images Together\n\ncombined &lt;- inner_join(blue, green, by = \"base_name\")\n\nThe “inner_join” function merges the blue and green data tables together based on their basename, which includes the dosage, timepoint, and sample ID. This function is from the dplyr package in tidyverse. The joining of these two datasets is a new varibale called “combined”.\n\n\nCalculate the Percent of Green area (yH2AX) normalized to the Blue area (DAPI)\n\ncombined &lt;- combined %&gt;%\n  mutate(percent_gammaH2AX = (`%Area_green` / `%Area_blue`) * 100)\n\nHere, I add a new column called “percent_gammaH2AX to the”combined” dataset using the “mutate()” function. This column will divide the precent of the green area (the yH2AX signal, which measures DNA damage) by the percent of the blue area (DAPI signal, which measures the total nuclei). I then multiply this by 100 to get a percentage which gives me the normalized value that gives me the percent of DNA damage relative to the number of cells.\n\n\nClean Data\n\ncombined &lt;- combined %&gt;%\n  filter(!is.na(dosage), !is.na(percent_gammaH2AX), !is.na(day)) %&gt;%\n  mutate(\n    dosage = factor(dosage, levels = c(\"0uM\", \"0.1uM\", \"0.2uM\", \"0.4uM\")),\n    day = factor(day, levels = c(\"3d\", \"4d\", \"7d\", \"11d\"))\n  ) %&gt;%\n  droplevels()\n\nIn this step I remove any rows that do not have dosage, percent_gammaH2AX, or timepoints using “filter()”. Next, “mutate()” is used to convert the dosage and day columns into categorical variables and set them in ascending order. “droplevels” is then used to remove any dosage or day lables that were no longer used in my new filtered dataset. Drop levels, is.na, and factor are all functions in base R.\n\n\nPick Colors for the Plot\n\nbox_fill &lt;- c(\n  \"3d\" = \"#66c2a5\",  # green\n  \"4d\" = \"#fc8d62\",  # orange\n  \"7d\" = \"#8da0cb\",  # blue\n  \"11d\" = \"#e78ac3\"  # pink\n)\n\nHere I made a variable called “box_fil” where each day is assigned to a specific color using the “c()” function.\n\n\nGenerate a Combined Plot looking at the Percent of DNA Damage Across Dosage of Doxorubicin\n\nggplot(combined, aes(x = dosage, y = percent_gammaH2AX, fill = day)) +\n  geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.4, width = 0.4, outlier.shape = NA) +\n  geom_jitter(aes(color = day), \n              position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), \n              size = 2, alpha = 0.8) +\n  scale_fill_manual(values = box_fill) +\n  scale_color_manual(values = box_fill) +\n  labs(\n    title = \"Assessing Dose- and Time-Dependent DNA Damage in VSMCs Following Doxorubicin Treatment\",\n    x = \"Doxorubicin Dose (uM)\",\n    y = \"% γH2AX / % DAPI\",\n    fill = \"Day\",\n    color = \"Day\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nIn this step, I am ready to graph so I will use the ggplot2 package in tidyverse. The “ggplot()” function creates a box plot. The “aes()” function maps dosage to the x axis and percent_gammaH2AX to the y axis and the boxes are filled based on their corresponding “box_fill” color. The “geom_boxplot()” function shoes the distribution f the values in each group and “geom_jitter() allows me to add the individual values. To make the individual points a darker color than their corresponding box_fill, I use”scale_fill_manual()” and “scale_color_manual()”. “labs()” allows me to name my title and axis lables. I used the “theme_minimal()”function to keep the plot clean and simple.\n\n\nPlot by the Individual Days Separately\n\nplot_day &lt;- function(day_label) {\n  combined %&gt;%\n    filter(day == day_label) %&gt;%\n    ggplot(aes(x = dosage, y = percent_gammaH2AX)) +\n    geom_boxplot(fill = box_fill[day_label], alpha = 0.4, width = 0.3, outlier.shape = NA) +\n    geom_jitter(color = box_fill[day_label], width = 0.15, size = 2, alpha = 0.8) +\n    labs(\n      title = paste(\"Dose-Dependent DNA Damage in VSMCs on\", day_label),\n      x = \"Doxorubicin Dose (uM)\",\n      y = \"% γH2AX / % DAPI\"\n    ) +\n    theme_minimal()\n}\n\n\nplot_day(\"3d\")\n\n\n\n\n\n\n\nplot_day(\"4d\")\n\n\n\n\n\n\n\nplot_day(\"7d\")\n\n\n\n\n\n\n\nplot_day(\"11d\")\n\n\n\n\n\n\n\n\nIn this step I wrote a function called “plot_day()”. I then use the argument, “day_label” to create a boxplot showing DNA damage across Doxorubicin treatments on that specific day. this filters the combined data set to only include rows matching the day.\n\n\nMake a Table of the Data set\n\ncombined %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = \"DNA Damage in VSMCs\",\n    subtitle = \"% γH2AX / % DAPI by Doxorubicin Dose and Timepoint\"\n  )\n\n\n\n\n\n\n\nDNA Damage in VSMCs\n\n\n% γH2AX / % DAPI by Doxorubicin Dose and Timepoint\n\n\nbase_name\nday\ndosage\nCount_blue\nTotal Area_blue\nAverage Size_blue\n%Area_blue\nMean_blue\nCount_green\nTotal Area_green\nAverage Size_green\n%Area_green\nMean_green\npercent_gammaH2AX\n\n\n\n\n18-153,vsmcS31,11d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n11d\n0.1uM\n26\n65016\n2500.615\n4.724\n255\n8\n20\n2.500\n1.000e-03\n255\n0.0211685013\n\n\n18-153,vsmcS31,11d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n11d\n0.1uM\n44\n106516\n2420.818\n7.740\n255\n10\n128\n12.800\n9.000e-03\n255\n0.1162790698\n\n\n18-153,vsmcS31,11d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n11d\n0.1uM\n37\n79257\n2142.081\n5.759\n255\n24\n343\n14.292\n2.500e-02\n255\n0.4341031429\n\n\n18-153,vsmcS31,11d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n11d\n0.1uM\n39\n90836\n2329.128\n6.600\n255\n17\n1788\n105.176\n1.300e-01\n255\n1.9696969697\n\n\n18-153,vsmcS31,11d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n11d\n0.2uM\n49\n139405\n2845.000\n10.129\n255\n20\n573\n28.650\n4.200e-02\n255\n0.4146510021\n\n\n18-153,vsmcS31,11d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n11d\n0.2uM\n41\n116463\n2840.561\n8.462\n255\n3\n18\n6.000\n1.000e-03\n255\n0.0118175372\n\n\n18-153,vsmcS31,11d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n11d\n0.2uM\n45\n109486\n2433.022\n7.955\n255\n6\n36\n6.000\n3.000e-03\n255\n0.0377121307\n\n\n18-153,vsmcS31,11d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n11d\n0.2uM\n71\n154543\n2176.662\n11.229\n255\n1\n1\n1.000\n7.266e-05\n255\n0.0006470745\n\n\n18-153,vsmcS31,11d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n11d\n0uM\n75\n151008\n2013.440\n10.972\n255\n20\n2512\n125.600\n1.830e-01\n255\n1.6678818812\n\n\n18-153,vsmcS31,11d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n11d\n0uM\n59\n136027\n2305.542\n9.884\n255\n21\n285\n13.571\n2.100e-02\n255\n0.2124645892\n\n\n18-153,vsmcS31,11d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n11d\n0uM\n108\n213672\n1978.444\n15.526\n255\n18\n237\n13.167\n1.700e-02\n255\n0.1094937524\n\n\n18-153,vsmcS31,11d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n11d\n0uM\n54\n125110\n2316.852\n9.091\n255\n17\n288\n16.941\n2.100e-02\n255\n0.2309976900\n\n\n18-153,vsmcS31,3d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n3d\n0uM\n18\n36224\n2012.444\n2.632\n255\n4\n26\n6.500\n2.000e-03\n255\n0.0759878419\n\n\n18-153,vsmcS31,3d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n3d\n0uM\n22\n43956\n1998.000\n3.194\n255\n4\n30\n7.500\n2.000e-03\n255\n0.0626174076\n\n\n18-153,vsmcS31,3d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n3d\n0uM\n24\n53503\n2229.292\n3.888\n255\n52\n1072\n20.615\n7.800e-02\n255\n2.0061728395\n\n\n18-153,vsmcS31,3d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n3d\n0uM\n28\n44885\n1603.036\n3.261\n255\n9\n145\n16.111\n1.100e-02\n255\n0.3373198405\n\n\n18-153,vsmcS31,4d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n4d\n0.1uM\n161\n295536\n1835.627\n21.474\n255\n15\n149\n9.933\n1.100e-02\n255\n0.0512247369\n\n\n18-153,vsmcS31,4d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n4d\n0.1uM\n277\n364691\n1316.574\n26.499\n255\n82\n4454\n54.317\n3.240e-01\n255\n1.2226876486\n\n\n18-153,vsmcS31,4d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n4d\n0.1uM\n278\n355752\n1279.683\n25.849\n255\n58\n2232\n38.483\n1.620e-01\n255\n0.6267167008\n\n\n18-153,vsmcS31,4d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n4d\n0.1uM\n251\n382747\n1524.888\n27.811\n255\n36\n1340\n37.222\n9.700e-02\n255\n0.3487828557\n\n\n18-153,vsmcS31,4d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n4d\n0.2uM\n67\n26811\n400.164\n1.948\n255\n19\n662\n34.842\n4.800e-02\n255\n2.4640657084\n\n\n18-153,vsmcS31,4d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n4d\n0.2uM\n120\n142990\n1191.583\n10.390\n255\n33\n524\n15.879\n3.800e-02\n255\n0.3657362849\n\n\n18-153,vsmcS31,4d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n4d\n0.2uM\n133\n164072\n1233.624\n11.922\n255\n20\n1248\n62.400\n9.100e-02\n255\n0.7632947492\n\n\n18-153,vsmcS31,4d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n4d\n0.2uM\n114\n55295\n485.044\n4.018\n255\n27\n430\n15.926\n3.100e-02\n255\n0.7715281234\n\n\n18-153,vsmcS31,4d,0.4uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n4d\n0.4uM\n124\n206077\n1661.911\n14.974\n255\n49\n1456\n29.714\n1.060e-01\n255\n0.7078936824\n\n\n18-153,vsmcS31,4d,0.4uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n4d\n0.4uM\n219\n310034\n1415.680\n22.527\n255\n156\n5362\n34.372\n3.900e-01\n255\n1.7312558263\n\n\n18-153,vsmcS31,4d,0.4uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n4d\n0.4uM\n105\n156177\n1487.400\n11.348\n255\n38\n6317\n166.237\n4.590e-01\n255\n4.0447655975\n\n\n18-153,vsmcS31,4d,0.4uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n4d\n0.4uM\n81\n106998\n1320.963\n7.775\n255\n65\n4450\n68.462\n3.230e-01\n255\n4.1543408360\n\n\n18-153,vsmcS31,4d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n4d\n0uM\n175\n267772\n1530.126\n19.457\n255\n205\n4308\n21.015\n3.130e-01\n255\n1.6086755409\n\n\n18-153,vsmcS31,4d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n4d\n0uM\n200\n292800\n1464.000\n21.275\n255\n135\n3052\n22.607\n2.220e-01\n255\n1.0434782609\n\n\n18-153,vsmcS31,4d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n4d\n0uM\n178\n266800\n1498.876\n19.386\n255\n100\n4127\n41.270\n3.000e-01\n255\n1.5475085113\n\n\n18-153,vsmcS31,4d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n4d\n0uM\n164\n265752\n1620.439\n19.310\n255\n65\n4138\n63.662\n3.010e-01\n255\n1.5587778353\n\n\n18-153,vsmcS31,7d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n7d\n0.1uM\n19\n48911\n2574.263\n3.554\n255\n19\n256\n13.474\n1.900e-02\n255\n0.5346088914\n\n\n18-153,vsmcS31,7d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n7d\n0.1uM\n36\n70718\n1964.389\n5.138\n255\n15\n231\n15.400\n1.700e-02\n255\n0.3308680420\n\n\n18-153,vsmcS31,7d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n7d\n0.1uM\n16\n50292\n3143.250\n3.654\n255\n44\n720\n16.364\n5.200e-02\n255\n1.4230979748\n\n\n18-153,vsmcS31,7d,0.1uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n7d\n0.1uM\n24\n71164\n2965.167\n5.171\n255\n11\n85\n7.727\n6.000e-03\n255\n0.1160317153\n\n\n18-153,vsmcS31,7d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n7d\n0.2uM\n15\n28537\n1902.467\n2.074\n255\n31\n241\n7.774\n1.800e-02\n255\n0.8678881389\n\n\n18-153,vsmcS31,7d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n7d\n0.2uM\n15\n41587\n2772.467\n3.022\n255\n16\n96\n6.000\n7.000e-03\n255\n0.2316346790\n\n\n18-153,vsmcS31,7d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n7d\n0.2uM\n13\n24485\n1883.462\n1.779\n255\n5\n28\n5.600\n2.000e-03\n255\n0.1124227094\n\n\n18-153,vsmcS31,7d,0.2uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n7d\n0.2uM\n12\n25809\n2150.750\n1.875\n255\n33\n433\n13.121\n3.100e-02\n255\n1.6533333333\n\n\n18-153,vsmcS31,7d,0.4uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n7d\n0.4uM\n12\n29685\n2473.750\n2.157\n255\n21\n205\n9.762\n1.500e-02\n255\n0.6954102921\n\n\n18-153,vsmcS31,7d,0.4uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n7d\n0.4uM\n12\n35368\n2947.333\n2.570\n255\n37\n401\n10.838\n2.900e-02\n255\n1.1284046693\n\n\n18-153,vsmcS31,7d,0.4uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n7d\n0.4uM\n10\n24595\n2459.500\n1.787\n255\n28\n258\n9.214\n1.900e-02\n255\n1.0632344712\n\n\n18-153,vsmcS31,7d,0.4uM doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n7d\n0.4uM\n11\n16911\n1537.364\n1.229\n255\n11\n89\n8.091\n6.000e-03\n255\n0.4882017901\n\n\n18-153,vsmcS31,7d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 1.tif\n7d\n0uM\n7\n17509\n2501.286\n1.272\n255\n9\n144\n16.000\n1.000e-02\n255\n0.7861635220\n\n\n18-153,vsmcS31,7d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 2.tif\n7d\n0uM\n10\n20096\n2009.600\n1.460\n255\n6\n145\n24.167\n1.100e-02\n255\n0.7534246575\n\n\n18-153,vsmcS31,7d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25 - 3.tif\n7d\n0uM\n14\n29994\n2142.429\n2.179\n255\n13\n427\n32.846\n3.100e-02\n255\n1.4226709500\n\n\n18-153,vsmcS31,7d,no doxo,H2AX-cy5 &BP153-RFP, 5-30-25.tif\n7d\n0uM\n16\n27856\n1741.000\n2.024\n255\n10\n311\n31.100\n2.300e-02\n255\n1.1363636364\n\n\n\n\n\n\n\nIn this final step, I am using the gt package to make a table of all of the combined data and analysis that I performed in all of the previous steps."
  },
  {
    "objectID": "projects_old/DNA Damage in VSMCs/DNA_Damage_VSMCs.html",
    "href": "projects_old/DNA Damage in VSMCs/DNA_Damage_VSMCs.html",
    "title": "DNA Damage in VSMCs",
    "section": "",
    "text": "Set the working directory\n\n#setwd(\"C:/Users/kpipkin1/Documents/GitHub/kaitlyn/projects/DNA Damage in VSMCs\")\n\n\n\n#Load the necessary libraries\n\nlibrary(tidyverse) \n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readr) \nlibrary(ggplot2) \nlibrary(stringr) \n\n\n\n#Read in all of the CSV files\n\nfile_paths &lt;- list.files(pattern = \"\\\\.csv$\", full.names = TRUE)\n\n\n\n#Read all of the data into 1 tibble\n\nall_data&lt;-file_paths %&gt;%\n  set_names() %&gt;%\n  map_dfr(read_csv, .id = \"filename\")\n\n\n\n#Add Columns and define base_name to help join\n\nall_data &lt;- all_data %&gt;%\n  mutate(\n    base_name = filename %&gt;%\n      basename() %&gt;%\n      str_remove(\" \\\\(blue\\\\)| \\\\(green\\\\)\") %&gt;%\n      str_remove(\"-summary\\\\.csv$\"),\n    day = str_extract(filename, \"\\\\d+d\"),\n    dosage = case_when(\n      str_detect(filename, \"0\\\\.1uM\") ~ \"0.1uM\",\n      str_detect(filename, \"0\\\\.2uM\") ~ \"0.2uM\",\n      str_detect(filename, \"0\\\\.4uM\") ~ \"0.4uM\",\n      str_detect(filename, \"no doxo\") ~ \"0uM\",\n      TRUE ~ NA_character_\n    ),\n    channel = case_when(\n      str_detect(filename, \"blue\") ~ \"blue\",\n      str_detect(filename, \"green\") ~ \"green\",\n      TRUE ~ NA_character_\n    )\n  )\n\n\n\n#Separate Blue and Green columns and join based on day and dosage\n\nblue &lt;- all_data %&gt;%\n  filter(channel == \"blue\") %&gt;%\n  select(base_name, day, dosage, Count, `Total Area`, `Average Size`, `%Area`, Mean) %&gt;%\n  rename_with(~ paste0(., \"_blue\"), -c(base_name, day, dosage))\n\ngreen &lt;- all_data %&gt;%\n  filter(channel == \"green\") %&gt;%\n  select(base_name, Count, `Total Area`, `Average Size`, `%Area`, Mean) %&gt;%\n  rename_with(~ paste0(., \"_green\"), -base_name)\n\n\n\n#Join green and blue channel images together\n\ncombined &lt;- inner_join(blue, green, by = \"base_name\")\n\n\n\n#Calculate the percent of green area (yH2AX) normalized to the blue area (DAPI)\n\ncombined &lt;- combined %&gt;%\n  mutate(percent_gammaH2AX = (`%Area_green` / `%Area_blue`) * 100)\n\n\n\n#Clean data and get rid of points that do not match, and any NA or missing values\n\ncombined &lt;- combined %&gt;%\n  filter(!is.na(dosage), !is.na(percent_gammaH2AX), !is.na(day)) %&gt;%\n  mutate(\n    dosage = factor(dosage, levels = c(\"0uM\", \"0.1uM\", \"0.2uM\", \"0.4uM\")),\n    day = factor(day, levels = c(\"3d\", \"4d\", \"7d\", \"11d\"))\n  ) %&gt;%\n  droplevels()\n\n\n\n#Pick colors for the plot\n\nbox_fill &lt;- c(\n  \"3d\" = \"#66c2a5\",  # green\n  \"4d\" = \"#fc8d62\",  # orange\n  \"7d\" = \"#8da0cb\",  # blue\n  \"11d\" = \"#e78ac3\"  # pink\n)\n\n\n\nGenerate a combined plot with each timepoint separated by color, dosage on X axis and percent of coverage (yH2AX/DAPI) on the y axis\n\nggplot(combined, aes(x = dosage, y = percent_gammaH2AX, fill = day)) +\n  geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.4, width = 0.4, outlier.shape = NA) +\n  geom_jitter(aes(color = day), \n              position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), \n              size = 2, alpha = 0.8) +\n  scale_fill_manual(values = box_fill) +\n  scale_color_manual(values = box_fill) +\n  labs(\n    title = \"Assessing Dose- and Time-Dependent DNA Damage in VSMCs Following Doxorubicin Treatment\",\n    x = \"Doxorubicin Dose\",\n    y = \"% γH2AX / % DAPI\",\n    fill = \"Day\",\n    color = \"Day\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nPlot the individual days separately to access DNA damage by dosage more clearly\n\nplot_day &lt;- function(day_label) {\n  combined %&gt;%\n    filter(day == day_label) %&gt;%\n    ggplot(aes(x = dosage, y = percent_gammaH2AX)) +\n    geom_boxplot(fill = box_fill[day_label], alpha = 0.4, width = 0.3, outlier.shape = NA) +\n    geom_jitter(color = box_fill[day_label], width = 0.15, size = 2, alpha = 0.8) +\n    labs(\n      title = paste(\"Dose-Dependent DNA Damage in VSMCs on\", day_label),\n      x = \"Doxorubicin Dose\",\n      y = \"% γH2AX / % DAPI\"\n    ) +\n    theme_minimal()\n}\n\n# Usage:\nplot_day(\"3d\")\n\n\n\n\n\n\n\nplot_day(\"4d\")\n\n\n\n\n\n\n\nplot_day(\"7d\")\n\n\n\n\n\n\n\nplot_day(\"11d\")"
  },
  {
    "objectID": "projects_old/Accessing DNA Damage.html",
    "href": "projects_old/Accessing DNA Damage.html",
    "title": "Accessing DNA Damage",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "projects/DNA Damage in VSMCs/DNA_Damage_VSMCs.html#header-2",
    "href": "projects/DNA Damage in VSMCs/DNA_Damage_VSMCs.html#header-2",
    "title": "DNA Damage in VSMCs",
    "section": "header 2",
    "text": "header 2\n\nheader 3\nSample text\n\nall_data &lt;- all_data %&gt;%\n  mutate(\n    base_name = filename %&gt;%\n      basename() %&gt;%\n      str_remove(\" \\\\(blue\\\\)| \\\\(green\\\\)\") %&gt;%\n      str_remove(\"-summary\\\\.csv$\"),\n    day = str_extract(filename, \"\\\\d+d\"),\n    dosage = case_when(\n      str_detect(filename, \"0\\\\.1uM\") ~ \"0.1uM\",\n      str_detect(filename, \"0\\\\.2uM\") ~ \"0.2uM\",\n      str_detect(filename, \"0\\\\.4uM\") ~ \"0.4uM\",\n      str_detect(filename, \"no doxo\") ~ \"0uM\",\n      TRUE ~ NA_character_\n    ),\n    channel = case_when(\n      str_detect(filename, \"blue\") ~ \"blue\",\n      str_detect(filename, \"green\") ~ \"green\",\n      TRUE ~ NA_character_\n    )\n  )"
  }
]